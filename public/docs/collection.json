{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "http:\/\/localhost:8000"
        }
    ],
    "info": {
        "name": "Tournaments API",
        "_postman_id": "747f75e9-66e7-48f7-b354-1d53ca48fc73",
        "description": "",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Authentication Endpoints",
            "description": "",
            "item": [
                {
                    "name": "Login",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "login",
                            "query": [],
                            "raw": "{{baseUrl}}\/login"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"username\":\"username\",\"password\":\"password\"}"
                        },
                        "description": "Returns JWT, user ID, and username if credentials match.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Login successful\", \"token\": \"JWT TOKEN\", \"user\": {\"id\": 1, \"name\": \"userame\"}}",
                            "name": "OK"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Already authenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please provide a registered username (and 1 more error)\",\n  \"errors\": {\n      \"username\": [\n          \"Please provide a registered username\"\n      ],\n      \"password\": [\n          \"Plese provide the password\"\n      ]\n  }\n}",
                            "name": "Unprocessable Entity"
                        }
                    ]
                },
                {
                    "name": "Register",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "register",
                            "query": [],
                            "raw": "{{baseUrl}}\/register"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"username\":\"username\",\"email\":\"email@example.com\",\"password\":\"password\",\"password_confirmation\":\"password\"}"
                        },
                        "description": "Registers a new user. Returns JWT, user ID, and username.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Registration successful\", \"token\": \"JWT TOKEN\", \"user\": {\"id\": 1, \"name\": \"userame\"}}",
                            "name": "OK"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Already authenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please provide a new username (and 2 more errors)\",\n  \"errors\": {\n      \"username\": [\n          \"Please provide a new username\"\n      ],\n      \"email\": [\n          \"Please provide an email\"\n      ],\n      \"password\": [\n          \"Please provide a password\"\n      ]\n  }\n}",
                            "name": "Unprocessable Entity"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Manage Brackets",
            "description": "\nAPI end-points to manage tournament brackets.",
            "item": [
                {
                    "name": "Get brackets",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/brackets",
                            "query": [
                                {
                                    "key": "dataStructure",
                                    "value": "enim",
                                    "description": "enum(tree,list) Defaults to \"list\". Returns created brackets in tree or list.For **trees**, brackets will be structured recursively in a **```binary tree```**, under the ```prev_match``` attribute with the last match as root.For **lists**, brackets will be structured in an **```array```**.",
                                    "disabled": false
                                }
                            ],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/brackets?dataStructure=enim",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "2",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 0,
                            "body": "",
                            "name": "No Content (No bracket in tournament)"
                        },
                        {
                            "header": [],
                            "code": 0,
                            "body": "{\n  \"brackets\": [\n    {\n      \"match\": 1,\n      \"player\": null,\n      \"prev_match\": {\n        \"left\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Adi\",\n            \"_url\": \"\/players\/1\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/1\"\n        },\n        \"right\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Budi\",\n            \"_url\": \"\/players\/2\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/2\"\n        }\n      },\n      \"_url\": \"\/tournaments\/2\/brackets\/3\"\n    }\n  ],\n  \"_url\": \"\/tournaments\/2\/brackets\",\n  \"tournament_url\": \"\/tournaments\/2\"\n}",
                            "name": "Created"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        },
                        {
                            "header": [
                                {
                                    "key": "cache-control",
                                    "value": "no-cache, private"
                                },
                                {
                                    "key": "x-ratelimit-limit",
                                    "value": "60"
                                },
                                {
                                    "key": "x-ratelimit-remaining",
                                    "value": "59"
                                },
                                {
                                    "key": "vary",
                                    "value": "Origin"
                                }
                            ],
                            "code": 204,
                            "body": "",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Create new brackets or replace old brackets.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/brackets",
                            "query": [
                                {
                                    "key": "dataStructure",
                                    "value": "eos",
                                    "description": "enum(tree,list) Defaults to \"list\". Returns created brackets in tree or list.For **trees**, brackets will be structured recursively in a **```binary tree```**, under the ```prev_match``` attribute with the last match as root.For **lists**, brackets will be structured in an **```array```**.",
                                    "disabled": false
                                },
                                {
                                    "key": "empty",
                                    "value": "1",
                                    "description": "Defaults to \"true\". If ```empty``` is specified, players will not be added automatically. Refer to **Upsert Player in Bracket**.",
                                    "disabled": false
                                }
                            ],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/brackets?dataStructure=eos&empty=1",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "11",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Brackets will be filled randomly with players associated with the tournament. Brackets will be build until the final bracket.\nThis endpoint can be called again to randomly insert recently added players into the brackets.<br \/>\nOnly tournament owner can create or replace brackets.\n\n<aside class=\"danger\">Calling this endpoint replaces previously generated bracket.<\/aside>\n\n<aside class=\"info\">No body parameters are required for this end-point. Any body parameters will be ignored<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 0,
                            "body": "",
                            "name": "No Content (No players in tournament)"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 0,
                            "body": "{\n  \"brackets\": [\n    {\n      \"match\": 1,\n      \"player\": null,\n      \"prev_match\": {\n        \"left\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Adi\",\n            \"_url\": \"\/players\/1\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/1\"\n        },\n        \"right\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Budi\",\n            \"_url\": \"\/players\/2\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/2\"\n        }\n      },\n      \"_url\": \"\/tournaments\/2\/brackets\/3\"\n    }\n  ],\n  \"_url\": \"\/tournaments\/2\/brackets\",\n  \"tournament_url\": \"\/tournaments\/2\"\n}",
                            "name": "Success (Brackets replaced)"
                        },
                        {
                            "header": [],
                            "code": 0,
                            "body": "{\n  \"brackets\": [\n    {\n      \"match\": 1,\n      \"player\": null,\n      \"prev_match\": {\n        \"left\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Adi\",\n            \"_url\": \"\/players\/1\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/1\"\n        },\n        \"right\": {\n          \"match\": null,\n          \"player\": {\n            \"name\": \"Budi\",\n            \"_url\": \"\/players\/2\",\n            \"tournament_url\": \"\/tournaments\/2\"\n          },\n          \"_url\": \"\/tournaments\/2\/brackets\/2\"\n        }\n      },\n      \"_url\": \"\/tournaments\/2\/brackets\/3\"\n    }\n  ],\n  \"_url\": \"\/tournaments\/2\/brackets\",\n  \"tournament_url\": \"\/tournaments\/2\"\n}",
                            "name": "Created (Brackets created)"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Upsert Player in Bracket",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "brackets\/:bracket\/player",
                            "query": [],
                            "raw": "{{baseUrl}}\/brackets\/:bracket\/player",
                            "variable": [
                                {
                                    "id": "bracket",
                                    "key": "bracket",
                                    "value": "10",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"player_id\":17}"
                        },
                        "description": "Insert a player to a bracket or replace a player in a bracket. Upsert can only be done if tournament has not started yet.\n\n<aside class=\"info\">If upserted player is already in the tournament brackets and the bracket is already assigned to a player, then both players' position in the bracket will be swapped.<\/aside>"
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Player upserted\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 400,
                            "body": "{\"message\": \"Error message\"}",
                            "name": "Bad Request"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Match Management",
            "description": "\nAPIS for managing tournament matches.",
            "item": [
                {
                    "name": "Get Match by Match Number",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/matches\/:match_num",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/matches\/:match_num",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "1",
                                    "description": ""
                                },
                                {
                                    "id": "match_num",
                                    "key": "match_num",
                                    "value": "9",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"id\": 398,\n  \"match\": 1,\n  \"player_id\": 15,\n  \"tournament_id\": 5,\n  \"created_at\": \"2022-05-23T06:52:37.000000Z\",\n  \"updated_at\": \"2022-05-23T06:53:20.000000Z\",\n  \"prev_match\": {\n      \"left\": {\n          \"id\": 399,\n          \"match\": null,\n          \"player_id\": 14,\n          \"tournament_id\": 5,\n          \"created_at\": \"2022-05-23T06:52:37.000000Z\",\n          \"updated_at\": \"2022-05-23T06:52:37.000000Z\",\n          \"player\": {\n              \"id\": 14,\n              \"name\": \"JSON\",\n              \"tournament_id\": 5,\n              \"created_at\": \"2022-05-23T06:51:46.000000Z\",\n              \"updated_at\": \"2022-05-23T06:51:46.000000Z\",\n              \"_url\": \"\/players\/14\",\n              \"tournament_url\": \"\/tournaments\/5\"\n          }\n      },\n      \"right\": {\n          \"id\": 400,\n          \"match\": null,\n          \"player_id\": 15,\n          \"tournament_id\": 5,\n          \"created_at\": \"2022-05-23T06:52:37.000000Z\",\n          \"updated_at\": \"2022-05-23T06:52:37.000000Z\",\n          \"player\": {\n              \"id\": 15,\n              \"name\": \"XML\",\n              \"tournament_id\": 5,\n              \"created_at\": \"2022-05-23T06:51:49.000000Z\",\n              \"updated_at\": \"2022-05-23T06:51:49.000000Z\",\n              \"_url\": \"\/players\/15\",\n              \"tournament_url\": \"\/tournaments\/5\"\n          }\n      }\n  },\n  \"player\": {\n      \"id\": 15,\n      \"name\": \"XML\",\n      \"tournament_id\": 5,\n      \"created_at\": \"2022-05-23T06:51:49.000000Z\",\n      \"updated_at\": \"2022-05-23T06:51:49.000000Z\",\n      \"_url\": \"\/players\/15\",\n      \"tournament_url\": \"\/tournaments\/5\"\n  }\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Declare Match Winner",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/matches\/:match_num\/winner",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/matches\/:match_num\/winner",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "11",
                                    "description": ""
                                },
                                {
                                    "id": "match_num",
                                    "key": "match_num",
                                    "value": "15",
                                    "description": "Match number of a tournament."
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"player_id\":\"nihil\"}"
                        },
                        "description": "Assigns a winner to a match. Winner can only be declared if tournament is started and player comes from previous match\/bracket."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Winner declared\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 400,
                            "body": "{\"message\": \"Error message\"}",
                            "name": "Bad Request"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Misc",
            "description": "",
            "item": [
                {
                    "name": "Get Current User",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "me",
                            "query": [],
                            "raw": "{{baseUrl}}\/me"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Get current authenticated user."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"id\": 1, \"name\": \"username\", \"email\": \"name@example.com\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        }
                    ]
                },
                {
                    "name": "Edit Current User",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "me",
                            "query": [],
                            "raw": "{{baseUrl}}\/me"
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"username\":\"username\",\"email\":\"email@example.com\"}"
                        },
                        "description": "Edit current authenticated user."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"id\": \"JWT Token\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please provide a new username (and 1 more error)\",\n  \"errors\": {\n      \"username\": [\n          \"Please provide a new username\"\n      ],\n      \"email\": [\n          \"Please provide an email\"\n      ]\n  }\n}",
                            "name": "Unprocessable Entity"
                        }
                    ]
                },
                {
                    "name": "Edit Current Password",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "me\/password",
                            "query": [],
                            "raw": "{{baseUrl}}\/me\/password"
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"oldPassword\":\"password\",\"password\":\"newPassword\",\"password_confirmation\":\"newPassword\"}"
                        },
                        "description": "Change current authenticated user's password."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Password changed\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please give the old password (and 1 more error)\",\n  \"errors\": {\n      \"oldPassword\": [\n          \"Please give the old password\"\n      ],\n      \"password\": [\n          \"Please provide a password\"\n      ]\n  }\n}",
                            "name": "Unprocessable Entity"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Player Management",
            "description": "\nAPIS for managing players",
            "item": [
                {
                    "name": "Get players of a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/players",
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Defaults to ```1```. Values less than 1 will default to 1.",
                                    "disabled": false
                                },
                                {
                                    "key": "name",
                                    "value": "",
                                    "description": "Search for player that contains ```name``` keyword.",
                                    "disabled": true
                                },
                                {
                                    "key": "limit",
                                    "value": "10",
                                    "description": "Defaults to ```10```. Values less than 1 will default to 1.",
                                    "disabled": false
                                }
                            ],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/players?page=1&name=&limit=10",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "19",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Players list is ordered in descending order by creation time.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"count\": 100,\n  \"total_pages\": 10,\n  \"page\": 1,\n  \"next_page\": \"\/tournaments\/1\/players?page=2\",\n  \"prev_page\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"Adi\",\n      \"_url\": \"\/players\/1\",\n      \"tournament_url\": \"\/tournaments\/1\",\n      \"created_at\": \"1970-01-01 00:00:00\",\n      \"updated_at\": \"1970-01-01 00:00:00\"\n    }\n  ]\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Create a player in a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/players",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/players",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "12",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"Adi\"}"
                        },
                        "description": "Only tournament owner can create a player in a tournament."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Adi\",\n  \"_url\": \"\/players\/1\",\n  \"tournament_url\": \"\/tournaments\/1\",\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\"\n}",
                            "name": "Created"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please give a name to the tournament (and 1 more error)\",\n  \"errors\": {\n      \"name\": [\n          \"Please give a name to the tournament\"\n      ],\n      \"description\": [\n          \"Description must be under 500 characters\"\n      ]\n  }\n}",
                            "name": "Invalid Request Body"
                        }
                    ]
                },
                {
                    "name": "Get a player",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "players\/:player",
                            "query": [],
                            "raw": "{{baseUrl}}\/players\/:player",
                            "variable": [
                                {
                                    "id": "player",
                                    "key": "player",
                                    "value": "3",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Adi\",\n  \"_url\": \"\/players\/1\",\n  \"tournament_url\": \"\/tournaments\/1\",\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\"\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Update a player",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "players\/:player",
                            "query": [],
                            "raw": "{{baseUrl}}\/players\/:player",
                            "variable": [
                                {
                                    "id": "player",
                                    "key": "player",
                                    "value": "16",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"Adi\"}"
                        },
                        "description": ""
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Adi\",\n  \"_url\": \"\/players\/1\",\n  \"tournament_url\": \"\/tournaments\/1\",\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\"\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please give a name to the tournament (and 1 more error)\",\n  \"errors\": {\n      \"name\": [\n          \"Please give a name to the tournament\"\n      ],\n      \"description\": [\n          \"Description must be under 500 characters\"\n      ]\n  }\n}",
                            "name": "Invalid Request Body"
                        }
                    ]
                },
                {
                    "name": "Delete a player",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "players\/:player",
                            "query": [],
                            "raw": "{{baseUrl}}\/players\/:player",
                            "variable": [
                                {
                                    "id": "player",
                                    "key": "player",
                                    "value": "16",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": ""
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"status\": \"Success\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Tournament Management",
            "description": "\nAPIS for managing tournaments",
            "item": [
                {
                    "name": "Get tournaments",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments",
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "Defaults to ```1```. Values less than 1 will default to 1.",
                                    "disabled": false
                                },
                                {
                                    "key": "name",
                                    "value": "",
                                    "description": "Search for tournament that contains ```name``` keyword.",
                                    "disabled": true
                                },
                                {
                                    "key": "limit",
                                    "value": "10",
                                    "description": "Defaults to ```10```. Values less than 1 will default to 1.",
                                    "disabled": false
                                },
                                {
                                    "key": "user",
                                    "value": "20",
                                    "description": "Get tournaments owned by specified user with id.",
                                    "disabled": false
                                }
                            ],
                            "raw": "{{baseUrl}}\/tournaments?page=1&name=&limit=10&user=20"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Tournament list is ordered in descending order by creation time.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"count\": 100,\n  \"total_pages\": 10,\n  \"page\": 1,\n  \"next_page\": \"\/tournaments?page=2\",\n  \"prev_page\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"Tournament 1\",\n      \"description\": \"The mind is willing, but the body is spongy and bruised\",\n      \"started\": false,\n      \"created_at\": \"1970-01-01 00:00:00\",\n      \"updated_at\": \"1970-01-01 00:00:00\",\n      \"_url\": \"\/tournaments\/1\"\n    }\n  ]\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Get a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "10",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Tournament 1\",\n  \"description\": \"The mind is willing, but the body is spongy and bruised\",\n  \"started\": false,\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\",\n  \"_url\": \"\/tournaments\/1\"\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Create a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"Tournament Awesome\",\"description\":\"Lorem ipsum dolor sit...\"}"
                        },
                        "description": ""
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 201,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Tournament 1\",\n  \"description\": \"The mind is willing, but the body is spongy and bruised\",\n  \"started\": false,\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\",\n  \"_url\": \"\/tournaments\/1\"\n}",
                            "name": "Created"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please give a name to the tournament (and 1 more error)\",\n  \"errors\": {\n      \"name\": [\n          \"Please give a name to the tournament\"\n      ],\n      \"description\": [\n          \"Description must be under 500 characters\"\n      ]\n  }\n}",
                            "name": "Invalid Request Body"
                        }
                    ]
                },
                {
                    "name": "Replace a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "19",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"Tournament Awesome\",\"description\":\"Lorem ipsum dolor sit...\"}"
                        },
                        "description": "Tournament can only be replaces\/edited by tournament owner.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"id\": 1,\n  \"name\": \"Tournament 1\",\n  \"description\": \"The mind is willing, but the body is spongy and bruised\",\n  \"started\": false,\n  \"created_at\": \"1970-01-01 00:00:00\",\n  \"updated_at\": \"1970-01-01 00:00:00\",\n  \"_url\": \"\/tournaments\/1\"\n}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"Please give a name to the tournament (and 1 more error)\",\n  \"errors\": {\n      \"name\": [\n          \"Please give a name to the tournament\"\n      ],\n      \"description\": [\n          \"Description must be under 500 characters\"\n      ]\n  }\n}",
                            "name": "Invalid Request Body"
                        }
                    ]
                },
                {
                    "name": "Delete a tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "17",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Tournament can only be deleted by tournament owner."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Tournament deleted\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                },
                {
                    "name": "Start Tournament",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "tournaments\/:tournament\/start",
                            "query": [],
                            "raw": "{{baseUrl}}\/tournaments\/:tournament\/start",
                            "variable": [
                                {
                                    "id": "tournament",
                                    "key": "tournament",
                                    "value": "6",
                                    "description": ""
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "Start a tournament. Tournament can only be started if all initial brackets are filled and can only be started by tournamnet owner."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\"message\": \"Tournament started\"}",
                            "name": "Success"
                        },
                        {
                            "header": [],
                            "code": 400,
                            "body": "{\"message\": \"Error message\"}",
                            "name": "Bad Request"
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "{\"message\": \"Unauthenticated\"}",
                            "name": "Unauthorized"
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n  \"message\": \"Reason of error\"\n}",
                            "name": "Not Found"
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer"
    }
}