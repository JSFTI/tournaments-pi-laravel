name: 'Authentication Endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      title: Login
      description: 'Returns JWT, user ID, and username if credentials match.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Your username.'
        required: true
        example: username
        type: string
        custom: []
      password:
        name: password
        description: 'Your password.'
        required: true
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Login successful", "token": "JWT TOKEN", "user": {"id": 1, "name": "userame"}}'
        headers: []
        description: '200, OK'
      -
        status: 401
        content: '{"message": "Already authenticated"}'
        headers: []
        description: '401, Unauthorized'
      -
        status: 422
        content: |-
          {
            "message": "Please provide a registered username (and 1 more error)",
            "errors": {
                "username": [
                    "Please provide a registered username"
                ],
                "password": [
                    "Plese provide the password"
                ]
            }
          }
        headers: []
        description: '422, Unprocessable Entity'
    responseFields:
      message:
        name: message
        description: 'Status message.'
        type: string
      token:
        name: token
        description: 'JWT value.'
        type: string
      user:
        name: user
        description: object.
        type: object
      user.id:
        name: user.id
        description: 'user ID.'
        type: integer
      user.name:
        name: user.name
        description: 'Authenticated username.'
        type: integer
  -
    httpMethods:
      - POST
    uri: register
    metadata:
      title: Register
      description: 'Registers a new user. Returns JWT, user ID, and username.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'New username.'
        required: true
        example: username
        type: string
        custom: []
      email:
        name: email
        description: 'New email.'
        required: true
        example: email@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Your password.'
        required: true
        example: password
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Same value as ```password```.'
        required: false
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Registration successful", "token": "JWT TOKEN", "user": {"id": 1, "name": "userame"}}'
        headers: []
        description: '200, OK'
      -
        status: 401
        content: '{"message": "Already authenticated"}'
        headers: []
        description: '401, Unauthorized'
      -
        status: 422
        content: |-
          {
            "message": "Please provide a new username (and 2 more errors)",
            "errors": {
                "username": [
                    "Please provide a new username"
                ],
                "email": [
                    "Please provide an email"
                ],
                "password": [
                    "Please provide a password"
                ]
            }
          }
        headers: []
        description: '422, Unprocessable Entity'
    responseFields:
      message:
        name: message
        description: 'Status message.'
        type: string
      token:
        name: token
        description: 'JWT value.'
        type: string
      user:
        name: user
        description: object.
        type: object
      user.id:
        name: user.id
        description: 'user ID.'
        type: integer
      user.name:
        name: user.name
        description: 'Authenticated username.'
        type: integer
